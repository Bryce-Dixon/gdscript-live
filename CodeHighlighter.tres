[gd_resource type="CodeHighlighter" format=3]

[resource]
number_color = Color(0.631373, 1, 0.878431, 1)
symbol_color = Color(0.670588, 0.788235, 1, 1)
function_color = Color(0.341176, 0.701961, 1, 1)
member_variable_color = Color(0.737255, 0.878431, 1, 1)
keyword_colors = {
"Array": Color(0.560784, 1, 0.858824, 1),
"Basis": Color(0.560784, 1, 0.858824, 1),
"Callable": Color(0.560784, 1, 0.858824, 1),
"Color": Color(0.560784, 1, 0.858824, 1),
"Dictionary": Color(0.560784, 1, 0.858824, 1),
"INF": Color(1, 0.439216, 0.521569, 1),
"NAN": Color(1, 0.439216, 0.521569, 1),
"NodePath": Color(0.560784, 1, 0.858824, 1),
"Object": Color(0.560784, 1, 0.858824, 1),
"PI": Color(1, 0.439216, 0.521569, 1),
"Plane": Color(0.560784, 1, 0.858824, 1),
"Quaternion": Color(0.560784, 1, 0.858824, 1),
"RID": Color(0.560784, 1, 0.858824, 1),
"Rect2": Color(0.560784, 1, 0.858824, 1),
"Signal": Color(0.560784, 1, 0.858824, 1),
"String": Color(0.560784, 1, 0.858824, 1),
"StringName": Color(0.560784, 1, 0.858824, 1),
"TAU": Color(1, 0.439216, 0.521569, 1),
"Transform2D": Color(0.560784, 1, 0.858824, 1),
"Transform3D": Color(0.560784, 1, 0.858824, 1),
"Vector2": Color(0.560784, 1, 0.858824, 1),
"Vector2i": Color(0.560784, 1, 0.858824, 1),
"Vector3": Color(0.560784, 1, 0.858824, 1),
"Vector3i": Color(0.560784, 1, 0.858824, 1),
"and": Color(1, 0.439216, 0.521569, 1),
"as": Color(1, 0.439216, 0.521569, 1),
"assert": Color(1, 0.439216, 0.521569, 1),
"await": Color(1, 0.439216, 0.521569, 1),
"bool": Color(0.560784, 1, 0.858824, 1),
"break": Color(1, 0.54902, 0.8, 1),
"breakpoint": Color(1, 0.439216, 0.521569, 1),
"class": Color(1, 0.439216, 0.521569, 1),
"class_name": Color(1, 0.439216, 0.521569, 1),
"const": Color(1, 0.439216, 0.521569, 1),
"continue": Color(1, 0.54902, 0.8, 1),
"elif": Color(1, 0.54902, 0.8, 1),
"else": Color(1, 0.54902, 0.8, 1),
"extends": Color(1, 0.439216, 0.521569, 1),
"float": Color(0.560784, 1, 0.858824, 1),
"for": Color(1, 0.54902, 0.8, 1),
"func": Color(1, 0.439216, 0.521569, 1),
"if": Color(1, 0.54902, 0.8, 1),
"in": Color(1, 0.439216, 0.521569, 1),
"int": Color(0.560784, 1, 0.858824, 1),
"is": Color(1, 0.439216, 0.521569, 1),
"match": Color(1, 0.54902, 0.8, 1),
"not": Color(1, 0.439216, 0.521569, 1),
"null": Color(1, 0.439216, 0.521569, 1),
"or": Color(1, 0.439216, 0.521569, 1),
"pass": Color(1, 0.54902, 0.8, 1),
"preload": Color(1, 0.439216, 0.521569, 1),
"return": Color(1, 0.54902, 0.8, 1),
"self": Color(1, 0.439216, 0.521569, 1),
"signal": Color(1, 0.439216, 0.521569, 1),
"static": Color(1, 0.439216, 0.521569, 1),
"super": Color(1, 0.439216, 0.521569, 1),
"var": Color(1, 0.439216, 0.521569, 1),
"void": Color(0.560784, 1, 0.858824, 1),
"while": Color(1, 0.54902, 0.8, 1),
"yield": Color(1, 0.439216, 0.521569, 1)
}
color_regions = {
"\" \"": Color(1, 0.929412, 0.631373, 1),
"\"\"\" \"\"\"": Color(1, 0.929412, 0.631373, 1),
"#": Color(0.803922, 0.811765, 0.823529, 0.501961),
"##": Color(0.803922, 0.811765, 0.823529, 0.501961),
"$\" \"": Color(0.388235, 0.760784, 0.34902, 1),
"$' '": Color(0.388235, 0.760784, 0.34902, 1),
"%\" \"": Color(0.388235, 0.760784, 0.34902, 1),
"%' '": Color(0.388235, 0.760784, 0.34902, 1),
"&\" \"": Color(1, 0.760784, 0.65098, 1),
"&' '": Color(1, 0.760784, 0.65098, 1),
"' '": Color(1, 0.929412, 0.631373, 1),
"''' '''": Color(1, 0.929412, 0.631373, 1),
"^\" \"": Color(0.721569, 0.768627, 0.490196, 1),
"^' '": Color(0.721569, 0.768627, 0.490196, 1)
}
