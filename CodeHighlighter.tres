[gd_resource type="CodeHighlighter" format=3 uid="uid://6k6m5w50yhpk"]

[resource]
number_color = Color(0.631373, 1, 0.878431, 1)
symbol_color = Color(0.670588, 0.788235, 1, 1)
function_color = Color(0.341176, 0.701961, 1, 1)
member_variable_color = Color(0.737255, 0.878431, 1, 1)
keyword_colors = {
"Array": Color(0.560784, 1, 0.858824, 1),
"Basis": Color(0.560784, 1, 0.858824, 1),
"Callable": Color(0.560784, 1, 0.858824, 1),
"Color": Color(0.560784, 1, 0.858824, 1),
"Dictionary": Color(0.560784, 1, 0.858824, 1),
"INF": Color(1, 0.439216, 0.521569, 1),
"NAN": Color(1, 0.439216, 0.521569, 1),
"NodePath": Color(0.560784, 1, 0.858824, 1),
"Object": Color(0.560784, 1, 0.858824, 1),
"PI": Color(1, 0.439216, 0.521569, 1),
"Plane": Color(0.560784, 1, 0.858824, 1),
"Quaternion": Color(0.560784, 1, 0.858824, 1),
"RID": Color(0.560784, 1, 0.858824, 1),
"Rect2": Color(0.560784, 1, 0.858824, 1),
"Signal": Color(0.560784, 1, 0.858824, 1),
"String": Color(0.560784, 1, 0.858824, 1),
"StringName": Color(0.560784, 1, 0.858824, 1),
"TAU": Color(1, 0.439216, 0.521569, 1),
"Transform2D": Color(0.560784, 1, 0.858824, 1),
"Transform3D": Color(0.560784, 1, 0.858824, 1),
"Vector2": Color(0.560784, 1, 0.858824, 1),
"Vector2i": Color(0.560784, 1, 0.858824, 1),
"Vector3": Color(0.560784, 1, 0.858824, 1),
"Vector3i": Color(0.560784, 1, 0.858824, 1),
"abs": Color(0.639216, 0.639216, 0.960784, 1),
"absf": Color(0.639216, 0.639216, 0.960784, 1),
"absi": Color(0.639216, 0.639216, 0.960784, 1),
"acos": Color(0.639216, 0.639216, 0.960784, 1),
"acosh": Color(0.639216, 0.639216, 0.960784, 1),
"and": Color(1, 0.439216, 0.521569, 1),
"angle_difference": Color(0.639216, 0.639216, 0.960784, 1),
"as": Color(1, 0.439216, 0.521569, 1),
"asin": Color(0.639216, 0.639216, 0.960784, 1),
"asinh": Color(0.639216, 0.639216, 0.960784, 1),
"assert": Color(1, 0.439216, 0.521569, 1),
"atan": Color(0.639216, 0.639216, 0.960784, 1),
"atan2": Color(0.639216, 0.639216, 0.960784, 1),
"atanh": Color(0.639216, 0.639216, 0.960784, 1),
"await": Color(1, 0.439216, 0.521569, 1),
"bezier_derivative": Color(0.639216, 0.639216, 0.960784, 1),
"bezier_interpolate": Color(0.639216, 0.639216, 0.960784, 1),
"bool": Color(0.560784, 1, 0.858824, 1),
"break": Color(1, 0.54902, 0.8, 1),
"breakpoint": Color(1, 0.439216, 0.521569, 1),
"bytes_to_var": Color(0.639216, 0.639216, 0.960784, 1),
"bytes_to_var_with_objects": Color(0.639216, 0.639216, 0.960784, 1),
"ceil": Color(0.639216, 0.639216, 0.960784, 1),
"ceilf": Color(0.639216, 0.639216, 0.960784, 1),
"ceili": Color(0.639216, 0.639216, 0.960784, 1),
"clamp": Color(0.639216, 0.639216, 0.960784, 1),
"clampf": Color(0.639216, 0.639216, 0.960784, 1),
"clampi": Color(0.639216, 0.639216, 0.960784, 1),
"class": Color(1, 0.439216, 0.521569, 1),
"class_name": Color(1, 0.439216, 0.521569, 1),
"const": Color(1, 0.439216, 0.521569, 1),
"continue": Color(1, 0.54902, 0.8, 1),
"cos": Color(0.639216, 0.639216, 0.960784, 1),
"cosh": Color(0.639216, 0.639216, 0.960784, 1),
"cubic_interpolate": Color(0.639216, 0.639216, 0.960784, 1),
"cubic_interpolate_angle": Color(0.639216, 0.639216, 0.960784, 1),
"cubic_interpolate_angle_in_time": Color(0.639216, 0.639216, 0.960784, 1),
"cubic_interpolate_in_time": Color(0.639216, 0.639216, 0.960784, 1),
"db_to_linear": Color(0.639216, 0.639216, 0.960784, 1),
"deg_to_rad": Color(0.639216, 0.639216, 0.960784, 1),
"ease": Color(0.639216, 0.639216, 0.960784, 1),
"elif": Color(1, 0.54902, 0.8, 1),
"else": Color(1, 0.54902, 0.8, 1),
"error_string": Color(0.639216, 0.639216, 0.960784, 1),
"exp": Color(0.639216, 0.639216, 0.960784, 1),
"extends": Color(1, 0.439216, 0.521569, 1),
"float": Color(0.560784, 1, 0.858824, 1),
"floor": Color(0.639216, 0.639216, 0.960784, 1),
"floorf": Color(0.639216, 0.639216, 0.960784, 1),
"floori": Color(0.639216, 0.639216, 0.960784, 1),
"fmod": Color(0.639216, 0.639216, 0.960784, 1),
"for": Color(1, 0.54902, 0.8, 1),
"fposmod": Color(0.639216, 0.639216, 0.960784, 1),
"func": Color(1, 0.439216, 0.521569, 1),
"hash": Color(0.639216, 0.639216, 0.960784, 1),
"if": Color(1, 0.54902, 0.8, 1),
"in": Color(1, 0.439216, 0.521569, 1),
"instance_from_id": Color(0.639216, 0.639216, 0.960784, 1),
"int": Color(0.560784, 1, 0.858824, 1),
"inverse_lerp": Color(0.639216, 0.639216, 0.960784, 1),
"is": Color(1, 0.439216, 0.521569, 1),
"is_equal_approx": Color(0.639216, 0.639216, 0.960784, 1),
"is_finite": Color(0.639216, 0.639216, 0.960784, 1),
"is_inf": Color(0.639216, 0.639216, 0.960784, 1),
"is_instance_id_valid": Color(0.639216, 0.639216, 0.960784, 1),
"is_instance_valid": Color(0.639216, 0.639216, 0.960784, 1),
"is_nan": Color(0.639216, 0.639216, 0.960784, 1),
"is_same": Color(0.639216, 0.639216, 0.960784, 1),
"is_zero_approx": Color(0.639216, 0.639216, 0.960784, 1),
"lerp": Color(0.639216, 0.639216, 0.960784, 1),
"lerp_angle": Color(0.639216, 0.639216, 0.960784, 1),
"lerpf": Color(0.639216, 0.639216, 0.960784, 1),
"linear_to_db": Color(0.639216, 0.639216, 0.960784, 1),
"log": Color(0.639216, 0.639216, 0.960784, 1),
"match": Color(1, 0.54902, 0.8, 1),
"max": Color(0.639216, 0.639216, 0.960784, 1),
"maxf": Color(0.639216, 0.639216, 0.960784, 1),
"maxi": Color(0.639216, 0.639216, 0.960784, 1),
"min": Color(0.639216, 0.639216, 0.960784, 1),
"minf": Color(0.639216, 0.639216, 0.960784, 1),
"mini": Color(0.639216, 0.639216, 0.960784, 1),
"move_toward": Color(0.639216, 0.639216, 0.960784, 1),
"nearest_po2": Color(0.639216, 0.639216, 0.960784, 1),
"not": Color(1, 0.439216, 0.521569, 1),
"null": Color(1, 0.439216, 0.521569, 1),
"or": Color(1, 0.439216, 0.521569, 1),
"pass": Color(1, 0.54902, 0.8, 1),
"pingpong": Color(0.639216, 0.639216, 0.960784, 1),
"posmod": Color(0.639216, 0.639216, 0.960784, 1),
"pow": Color(0.639216, 0.639216, 0.960784, 1),
"preload": Color(1, 0.439216, 0.521569, 1),
"print": Color(0.639216, 0.639216, 0.960784, 1),
"print_rich": Color(0.639216, 0.639216, 0.960784, 1),
"print_verbose": Color(0.639216, 0.639216, 0.960784, 1),
"printerr": Color(0.639216, 0.639216, 0.960784, 1),
"printraw": Color(0.639216, 0.639216, 0.960784, 1),
"prints": Color(0.639216, 0.639216, 0.960784, 1),
"printt": Color(0.639216, 0.639216, 0.960784, 1),
"push_error": Color(0.639216, 0.639216, 0.960784, 1),
"push_warning": Color(0.639216, 0.639216, 0.960784, 1),
"rad_to_deg": Color(0.639216, 0.639216, 0.960784, 1),
"rand_from_seed": Color(0.639216, 0.639216, 0.960784, 1),
"randf": Color(0.639216, 0.639216, 0.960784, 1),
"randf_range": Color(0.639216, 0.639216, 0.960784, 1),
"randfn": Color(0.639216, 0.639216, 0.960784, 1),
"randi": Color(0.639216, 0.639216, 0.960784, 1),
"randirange": Color(0.639216, 0.639216, 0.960784, 1),
"randomize": Color(0.639216, 0.639216, 0.960784, 1),
"remap": Color(0.639216, 0.639216, 0.960784, 1),
"return": Color(1, 0.54902, 0.8, 1),
"rid_allocate_id": Color(0.639216, 0.639216, 0.960784, 1),
"rid_from_int64": Color(0.639216, 0.639216, 0.960784, 1),
"rotate_toward": Color(0.639216, 0.639216, 0.960784, 1),
"round": Color(0.639216, 0.639216, 0.960784, 1),
"roundf": Color(0.639216, 0.639216, 0.960784, 1),
"roundi": Color(0.639216, 0.639216, 0.960784, 1),
"seed": Color(0.639216, 0.639216, 0.960784, 1),
"self": Color(1, 0.439216, 0.521569, 1),
"sign": Color(0.639216, 0.639216, 0.960784, 1),
"signal": Color(1, 0.439216, 0.521569, 1),
"signf": Color(0.639216, 0.639216, 0.960784, 1),
"signi": Color(0.639216, 0.639216, 0.960784, 1),
"sin": Color(0.639216, 0.639216, 0.960784, 1),
"sinh": Color(0.639216, 0.639216, 0.960784, 1),
"smoothstep": Color(0.639216, 0.639216, 0.960784, 1),
"snapped": Color(0.639216, 0.639216, 0.960784, 1),
"snappedf": Color(0.639216, 0.639216, 0.960784, 1),
"snappedi": Color(0.639216, 0.639216, 0.960784, 1),
"sqrt": Color(0.639216, 0.639216, 0.960784, 1),
"static": Color(1, 0.439216, 0.521569, 1),
"step_decimals": Color(0.639216, 0.639216, 0.960784, 1),
"str": Color(0.639216, 0.639216, 0.960784, 1),
"str_to_var": Color(0.639216, 0.639216, 0.960784, 1),
"super": Color(1, 0.439216, 0.521569, 1),
"tan": Color(0.639216, 0.639216, 0.960784, 1),
"tanh": Color(0.639216, 0.639216, 0.960784, 1),
"type_convert": Color(0.639216, 0.639216, 0.960784, 1),
"type_string": Color(0.639216, 0.639216, 0.960784, 1),
"typeof": Color(0.639216, 0.639216, 0.960784, 1),
"var": Color(1, 0.439216, 0.521569, 1),
"var_to_bytes": Color(0.639216, 0.639216, 0.960784, 1),
"var_to_bytes_with_objects": Color(0.639216, 0.639216, 0.960784, 1),
"var_to_str": Color(0.639216, 0.639216, 0.960784, 1),
"void": Color(0.560784, 1, 0.858824, 1),
"weakref": Color(0.639216, 0.639216, 0.960784, 1),
"while": Color(1, 0.54902, 0.8, 1),
"wrap": Color(0.639216, 0.639216, 0.960784, 1),
"wrapf": Color(0.639216, 0.639216, 0.960784, 1),
"wrapi": Color(0.639216, 0.639216, 0.960784, 1),
"yield": Color(1, 0.439216, 0.521569, 1)
}
color_regions = {
"\" \"": Color(1, 0.929412, 0.631373, 1),
"\"\"\" \"\"\"": Color(1, 0.929412, 0.631373, 1),
"#": Color(0.803922, 0.811765, 0.823529, 0.501961),
"##": Color(0.803922, 0.811765, 0.823529, 0.501961),
"$\" \"": Color(0.388235, 0.760784, 0.34902, 1),
"$' '": Color(0.388235, 0.760784, 0.34902, 1),
"%\" \"": Color(0.388235, 0.760784, 0.34902, 1),
"%' '": Color(0.388235, 0.760784, 0.34902, 1),
"&\" \"": Color(1, 0.760784, 0.65098, 1),
"&' '": Color(1, 0.760784, 0.65098, 1),
"' '": Color(1, 0.929412, 0.631373, 1),
"''' '''": Color(1, 0.929412, 0.631373, 1),
"^\" \"": Color(0.721569, 0.768627, 0.490196, 1),
"^' '": Color(0.721569, 0.768627, 0.490196, 1)
}
